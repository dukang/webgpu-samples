(window.webpackJsonp=window.webpackJsonp||[]).push([[1,5],{0:function(e,n,t){"use strict";var o=function(e,n,t,o){return new(t||(t=Promise))((function(r,i){function a(e){try{u(o.next(e))}catch(e){i(e)}}function c(e){try{u(o.throw(e))}catch(e){i(e)}}function u(e){var n;e.done?r(e.value):(n=e.value,n instanceof t?n:new t((function(e){e(n)}))).then(a,c)}u((o=o.apply(e,n||[])).next())}))};let r=void 0;n.a=function(){return o(this,void 0,void 0,(function*(){if(void 0!==r)return r;const e=yield import("https://unpkg.com/@webgpu/glslang@0.0.15/dist/web-devel/glslang.js");return r=yield e.default(),r}))}},15:function(e,n,t){"use strict";t.r(n),t.d(n,"title",(function(){return i})),t.d(n,"description",(function(){return a})),t.d(n,"init",(function(){return c}));var o=t(0),r=function(e,n,t,o){return new(t||(t=Promise))((function(r,i){function a(e){try{u(o.next(e))}catch(e){i(e)}}function c(e){try{u(o.throw(e))}catch(e){i(e)}}function u(e){var n;e.done?r(e.value):(n=e.value,n instanceof t?n:new t((function(e){e(n)}))).then(a,c)}u((o=o.apply(e,n||[])).next())}))};const i="Hello Triangle",a="Shows rendering a basic triangle.";function c(e){return r(this,void 0,void 0,(function*(){const n="#version 450\n      const vec2 pos[3] = vec2[3](vec2(0.0f, 0.5f), vec2(-0.5f, -0.5f), vec2(0.5f, -0.5f));\n\n      void main() {\n          gl_Position = vec4(pos[gl_VertexIndex], 0.0, 1.0);\n      }\n    ",t="#version 450\n      layout(location = 0) out vec4 outColor;\n\n      void main() {\n          outColor = vec4(1.0, 0.0, 0.0, 1.0);\n      }\n    ",r=yield navigator.gpu.requestAdapter(),i=yield r.requestDevice(),a=yield Object(o.a)(),c=e.getContext("gpupresent").configureSwapChain({device:i,format:"bgra8unorm"}),u=i.createRenderPipeline({layout:i.createPipelineLayout({bindGroupLayouts:[]}),vertexStage:{module:i.createShaderModule({code:a.compileGLSL(n,"vertex"),source:n,transform:e=>a.compileGLSL(e,"vertex")}),entryPoint:"main"},fragmentStage:{module:i.createShaderModule({code:a.compileGLSL(t,"fragment"),source:t,transform:e=>a.compileGLSL(e,"fragment")}),entryPoint:"main"},primitiveTopology:"triangle-list",colorStates:[{format:"bgra8unorm"}]});return function(){const e=i.createCommandEncoder({}),n={colorAttachments:[{attachment:c.getCurrentTexture().createView(),loadValue:{r:0,g:0,b:0,a:1}}]},t=e.beginRenderPass(n);t.setPipeline(u),t.draw(3,1,0,0),t.endPass(),i.defaultQueue.submit([e.finish()])}}))}},3:function(e,n,t){"use strict";t.r(n),t.d(n,"title",(function(){return i})),t.d(n,"description",(function(){return a})),t.d(n,"init",(function(){return c}));var o=t(0),r=function(e,n,t,o){return new(t||(t=Promise))((function(r,i){function a(e){try{u(o.next(e))}catch(e){i(e)}}function c(e){try{u(o.throw(e))}catch(e){i(e)}}function u(e){var n;e.done?r(e.value):(n=e.value,n instanceof t?n:new t((function(e){e(n)}))).then(a,c)}u((o=o.apply(e,n||[])).next())}))};const i="Hello Triangle MSAA",a="Shows rendering a basic triangle with multisampling.";function c(e){return r(this,void 0,void 0,(function*(){const n="#version 450\n      const vec2 pos[3] = vec2[3](vec2(0.0f, 0.5f), vec2(-0.5f, -0.5f), vec2(0.5f, -0.5f));\n\n      void main() {\n          gl_Position = vec4(pos[gl_VertexIndex], 0.0, 1.0);\n      }\n    ",t="#version 450\n      layout(location = 0) out vec4 outColor;\n\n      void main() {\n          outColor = vec4(1.0, 0.0, 0.0, 1.0);\n      }\n    ",r=yield navigator.gpu.requestAdapter(),i=yield r.requestDevice(),a=yield Object(o.a)(),c=e.getContext("gpupresent").configureSwapChain({device:i,format:"bgra8unorm"}),u=i.createRenderPipeline({layout:i.createPipelineLayout({bindGroupLayouts:[]}),vertexStage:{module:i.createShaderModule({code:a.compileGLSL(n,"vertex"),source:n,transform:e=>a.compileGLSL(e,"vertex")}),entryPoint:"main"},fragmentStage:{module:i.createShaderModule({code:a.compileGLSL(t,"fragment"),source:t,transform:e=>a.compileGLSL(e,"fragment")}),entryPoint:"main"},primitiveTopology:"triangle-list",colorStates:[{format:"bgra8unorm"}],sampleCount:4}),l=i.createTexture({size:{width:e.width,height:e.height,depth:1},sampleCount:4,format:"bgra8unorm",usage:GPUTextureUsage.OUTPUT_ATTACHMENT}).createView();return function(){const e=i.createCommandEncoder({}),n={colorAttachments:[{attachment:l,resolveTarget:c.getCurrentTexture().createView(),loadValue:{r:0,g:0,b:0,a:1}}]},t=e.beginRenderPass(n);t.setPipeline(u),t.draw(3,1,0,0),t.endPass(),i.defaultQueue.submit([e.finish()])}}))}}}]);
//# sourceMappingURL=helloTriangle-d06e4b.js.map